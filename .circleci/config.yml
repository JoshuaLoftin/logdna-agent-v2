version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: logdna/logdna-agent
      IBM_IMAGE_NAME: icr.io/ext/logdna-agent
      SCAN_IMAGE_NAME: "sysdiglabs/secure_inline_scan:latest"
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  check:
    docker:
      - image: rust:latest
    steps:
      - checkout
      - run:
          name: Check
          command: |
            cargo check
  set-master:
    executor: docker-publisher
    steps:
      - run: echo "export IMAGE_TAG=master" >> env-vars
      - persist_to_workspace:
          root: .
          paths:
            - ./env-vars
  set-tag:
    executor: docker-publisher
    steps:
      - run: echo "export IMAGE_TAG=$CIRCLE_TAG" >> env-vars
      - persist_to_workspace:
          root: .
          paths:
            - ./env-vars
  image-build:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run: |
          cat /tmp/workspace/env-vars > env-vars
          echo "export DATESTAMP=$(date +%s)" >> env-vars
          cat env-vars >> ${BASH_ENV}
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t ${IMAGE_NAME}:sandbox-${DATESTAMP} .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar ${IMAGE_NAME}:sandbox-${DATESTAMP}
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
            - ./env-vars
  docker-sandbox:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: cat /tmp/workspace/env-vars >> $BASH_ENV
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub as Sandbox
          command: |
            echo "${DOCKERHUB_PASS}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
            docker push ${IMAGE_NAME}:sandbox-${DATESTAMP}
            docker run --rm -v /var/run/docker.sock:/var/run/docker.sock ${SCAN_IMAGE_NAME} /bin/inline_scan analyze -s https://secure.sysdig.com -k "${SYSDIG_SECURE_TOKEN}" "${IMAGE_NAME}:sandbox-${DATESTAMP}"
  docker-approved:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: cat /tmp/workspace/env-vars >> $BASH_ENV
  docker-upload:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: cat /tmp/workspace/env-vars >> $BASH_ENV
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "${DOCKERHUB_PASS}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
            docker tag ${IMAGE_NAME}:sandbox-${DATESTAMP} ${IMAGE_NAME}:${IMAGE_TAG}
            docker push ${IMAGE_NAME}:${IMAGE_TAG}
  ibm-registry:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: cat /tmp/workspace/env-vars >> $BASH_ENV
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to IBM registry
          command: |
            echo "${IBM_API_KEY}" | docker login -u iamapikey --password-stdin icr.io
            docker tag ${IMAGE_NAME}:sandbox-${DATESTAMP} ${IBM_IMAGE_NAME}:v2-${IMAGE_TAG}
            docker push ${IBM_IMAGE_NAME}:v2-${IMAGE_TAG}
workflows:
  version: 2
  check:
    jobs:
      - check
  build-tags:
    jobs:
      - set-tag:
          filters:
            tags:
              only: /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/
            branches:
              ignore: /.*/
      - image-build:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
          requires:
            - set-tag
      - docker-sandbox:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
          requires:
            - image-build
      - docker-approved:
          type: approval
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
          requires:
            - docker-sandbox
      - ibm-registry:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
          requires:
            - docker-approved
      - docker-upload:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
          requires:
            - docker-approved
  build-master:
    jobs:
      - set-master:
          filters:
            branches:
              only: master
      - image-build:
          requires:
            - set-master
      - docker-sandbox:
          requires:
            - image-build
      - ibm-registry:
          requires:
            - docker-sandbox
      - docker-upload:
          requires:
            - docker-sandbox